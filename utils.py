# utils.py

import os
from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from config import logger, BASE_DIR

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
async def send_message(update: Update, context: ContextTypes.DEFAULT_TYPE, message: str, options: list) -> None:
    if isinstance(options[0], list):
        reply_markup = ReplyKeyboardMarkup(options, resize_keyboard=True, one_time_keyboard=True)
    else:
        reply_markup = ReplyKeyboardMarkup([options], resize_keyboard=True, one_time_keyboard=True)

    logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º: {message} –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º: {context.user_data.get('state', 'main_menu')}")

    await update.message.reply_text(message, reply_markup=reply_markup)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏
async def send_inline_message(update: Update, context: ContextTypes.DEFAULT_TYPE, message: str, buttons: list) -> None:
    keyboard = InlineKeyboardMarkup(buttons)
    await update.message.reply_text(message, reply_markup=keyboard)
    logger.info("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏: %s", message)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –ø–æ –∏–º–µ–Ω–∏ —Ç–∞—Ä–∏—Ñ–∞
def get_image_path(tariff_name):
    image_files = {
        '–ì–µ–Ω.–£–±–æ—Ä–∫–∞üßº': 'general.jpg',
        '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—èüßπ': 'vacuumcat.png',
        '–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–πüõ†': 'build.jpg',
        '–ú—ã—Ç—å–µ –æ–∫–æ–Ωüß¥': 'window.jpg'
    }

    image_file = image_files.get(tariff_name)
    if not image_file:
        raise ValueError(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è —Ç–∞—Ä–∏—Ñ–∞: {tariff_name}")

    return os.path.join(BASE_DIR, 'img', image_file)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞
def get_description(tariff_name):
    from data import CLEANING_DETAILS

    details = CLEANING_DETAILS.get(tariff_name)
    if not details:
        raise ValueError(f"–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è —Ç–∞—Ä–∏—Ñ–∞: {tariff_name}")

    return details['details_text']
